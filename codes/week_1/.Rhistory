# calculate the correlation of sulfate and nitrate
for (i in length(full_files)) {
monitor_num <- read.csv(full_files[i])
# calculate sulfate and nitrate for monitor locations where the number
# of completely observed cases, regardless of NA
# $ is used to select the key, either sulfate or nitrate
summa <- sum((!is.na(monitor_num$sulfate)) & (!is.na(monitor_num$nitrate)))
if (csum > threshold) {
part_A <- monitor_num$sulfate
part_B <- monitor_num$nitrate
data_ini <- c(data_ini, cor(part_A, part_B))
}
}
data_ini
}
cr <- corr("specdata", 400)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observation (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the results!
# load the all file names
full_files <- list.files(directory, full.names = TRUE)
# set an initial vector
data_ini <- c()
# calculate the correlation of sulfate and nitrate
for (i in length(full_files)) {
monitor_num <- read.csv(full_files[i])
# calculate sulfate and nitrate for monitor locations where the number
# of completely observed cases, regardless of NA
# $ is used to select the key, either sulfate or nitrate
summa <- sum((!is.na(monitor_num$sulfate)) & (!is.na(monitor_num$nitrate)))
if (summa > threshold) {
part_A <- monitor_num$sulfate
part_B <- monitor_num$nitrate
data_ini <- c(data_ini, cor(part_A, part_B))
}
}
data_ini
}
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 5000)
summary(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observation (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the results!
# load the all file names
full_files <- list.files(directory, full.names = TRUE)
# set an initial vector
data_ini <- c()
# calculate the correlation of sulfate and nitrate
for (i in length(full_files)) {
monitor_num <- read.csv(full_files[i])
# calculate sulfate and nitrate for monitor locations where the number
# of completely observed cases, regardless of NA
# $ is used to select the key, either sulfate or nitrate
summa <- sum((!is.na(monitor_num$sulfate)) & (!is.na(monitor_num$nitrate)))
if (summa > threshold) {
part_A <- monitor_num[which(!is.na(monitor_num$sulfate))]
part_B <- monitor_num[which(!is.na(monitor_num$nitrate))]
data_ini <- c(data_ini, cor(part_A, part_B))
}
}
data_ini
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observation (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the results!
# load the all file names
full_files <- list.files(directory, full.names = TRUE)
# set an initial vector
data_ini <- c()
# calculate the correlation of sulfate and nitrate
for (i in length(full_files)) {
monitor_num <- read.csv(full_files[i])
# calculate sulfate and nitrate for monitor locations where the number
# of completely observed cases, regardless of NA
# $ is used to select the key, either sulfate or nitrate
summa <- sum((!is.na(monitor_num$sulfate)) & (!is.na(monitor_num$nitrate)))
if (summa > threshold) {
part_A <- monitor_num[which(!is.na(monitor_num$sulfate)), ]
part_B <- monitor_num[which(!is.na(monitor_num$nitrate)), ]
data_ini <- c(data_ini, cor(part_A, part_B))
}
}
data_ini
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observation (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the results!
# load the all file names
full_files <- list.files(directory, full.names = TRUE)
# set an initial vector
data_ini <- c()
# calculate the correlation of sulfate and nitrate
for (i in length(full_files)) {
monitor_num <- read.csv(full_files[i])
# calculate sulfate and nitrate for monitor locations where the number
# of completely observed cases, regardless of NA
# $ is used to select the key, either sulfate or nitrate
summa <- sum((!is.na(monitor_num$sulfate)) & (!is.na(monitor_num$nitrate)))
if (summa > threshold) {
part_A <- monitor_num[which(!is.na(monitor_num$sulfate)), ]
part_B <- part_A[which(!is.na(part_A$nitrate)), ]
data_ini <- c(data_ini, cor(part_B$sulfate, part_B$nitrate))
}
}
data_ini
}
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
csum <- sum((!is.na(moni_i$sulfate)) & (!is.na(moni_i$nitrate)))
corr <- function(directory, threshold = 0) {
files_full <- list.files(directory, full.names = TRUE)
dat <- vector(mode = "numeric", length = 0)
for (i in 1:length(files_full)) {
moni_i <- read.csv(files_full[i])
csum <- sum((!is.na(moni_i$sulfate)) & (!is.na(moni_i$nitrate)))
if (csum > threshold) {
tmp <- moni_i[which(!is.na(moni_i$sulfate)), ]
submoni_i <- tmp[which(!is.na(tmp$nitrate)), ]
dat <- c(dat, cor(submoni_i$sulfate, submoni_i$nitrate))
}
}
dat
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observation (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the results!
# load the all file names
full_files <- list.files(directory, full.names = TRUE)
# set an initial vector
data_ini <- vector(mode = "numeric", length = 0)
# calculate the correlation of sulfate and nitrate
for (i in length(full_files)) {
monitor_num <- read.csv(full_files[i])
# calculate sulfate and nitrate for monitor locations where the number
# of completely observed cases, regardless of NA
# $ is used to select the key, either sulfate or nitrate
summa <- sum((!is.na(monitor_num$sulfate)) & (!is.na(monitor_num$nitrate)))
if (summa > threshold) {
part_A <- monitor_num[which(!is.na(monitor_num$sulfate)), ]
part_B <- part_A[which(!is.na(part_A$nitrate)), ]
data_ini <- c(data_ini, cor(part_B$sulfate, part_B$nitrate))
}
}
data_ini
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observation (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the results!
# load the all file names
full_files <- list.files(directory, full.names = TRUE)
# set an initial vector
data_ini <- c()
# calculate the correlation of sulfate and nitrate
for (i in 1:length(full_files)) {
monitor_num <- read.csv(full_files[i])
# calculate sulfate and nitrate for monitor locations where the number
# of completely observed cases, regardless of NA
# $ is used to select the key, either sulfate or nitrate
summa <- sum((!is.na(monitor_num$sulfate)) & (!is.na(monitor_num$nitrate)))
if (summa > threshold) {
part_A <- monitor_num[which(!is.na(monitor_num$sulfate)), ]
part_B <- monitor_num[which(!is.na(monitor_num$nitrate)), ]
data_ini <- c(data_ini, cor(part_A, part_B))
}
}
data_ini
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observation (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the results!
# load the all file names
full_files <- list.files(directory, full.names = TRUE)
# set an initial vector
data_ini <- vector(mode = "numeric", length = 0)
# calculate the correlation of sulfate and nitrate
for (i in 1:length(full_files)) {
monitor_num <- read.csv(full_files[i])
# calculate sulfate and nitrate for monitor locations where the number
# of completely observed cases, regardless of NA
# $ is used to select the key, either sulfate or nitrate
summa <- sum((!is.na(monitor_num$sulfate)) & (!is.na(monitor_num$nitrate)))
if (summa > threshold) {
part_A <- monitor_num[which(!is.na(monitor_num$sulfate)), ]
part_B <- monitor_num[which(!is.na(monitor_num$nitrate)), ]
data_ini <- c(data_ini, cor(part_A, part_B))
}
}
data_ini
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observation (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the results!
# load the all file names
full_files <- list.files(directory, full.names = TRUE)
# set an initial vector
data_ini <- vector(mode = "numeric", length = 0)
# calculate the correlation of sulfate and nitrate
for (i in 1:length(full_files)) {
monitor_num <- read.csv(full_files[i])
# calculate sulfate and nitrate for monitor locations where the number
# of completely observed cases, regardless of NA
# $ is used to select the key, either sulfate or nitrate
summa <- sum((!is.na(monitor_num$sulfate)) & (!is.na(monitor_num$nitrate)))
if (summa > threshold) {
part_A <- monitor_num[which(!is.na(monitor_num$sulfate)), ]
part_B <- monitor_num[which(!is.na(monitor_num$nitrate)), ]
data_ini <- c(data_ini, cor(part_A$sulfate, part_B$nitrate))
}
}
data_ini
}
cr <- corr("specdata", 150)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observation (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the results!
# load the all file names
full_files <- list.files(directory, full.names = TRUE)
# set an initial vector
data_ini <- c()
# calculate the correlation of sulfate and nitrate
for (i in length(full_files)) {
monitor_num <- read.csv(full_files[i])
# calculate sulfate and nitrate for monitor locations where the number
# of completely observed cases, regardless of NA
# $ is used to select the key, either sulfate or nitrate
summa <- sum((!is.na(monitor_num$sulfate)) & (!is.na(monitor_num$nitrate)))
if (summa > threshold) {
monitor_temp <- monitor_num[which(!is.na(monitor_num$sulfate)), ]
main_part <- monitor_temp[which(!is.na(monitor_temp$nitrate)), ]
data_ini <- c(data_ini, cor(main_part$sulfate, main_part$nitrate))
}
}
data_ini
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observation (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the results!
# load the all file names
full_files <- list.files(directory, full.names = TRUE)
# set an initial vector
data_ini <- vector(mode = "numeric", length = 0)
# calculate the correlation of sulfate and nitrate
for (i in length(full_files)) {
monitor_num <- read.csv(full_files[i])
# calculate sulfate and nitrate for monitor locations where the number
# of completely observed cases, regardless of NA
# $ is used to select the key, either sulfate or nitrate
summa <- sum((!is.na(monitor_num$sulfate)) & (!is.na(monitor_num$nitrate)))
if (summa > threshold) {
monitor_temp <- monitor_num[which(!is.na(monitor_num$sulfate)), ]
main_part <- monitor_temp[which(!is.na(monitor_temp$nitrate)), ]
data_ini <- c(data_ini, cor(main_part$sulfate, main_part$nitrate))
}
}
data_ini
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observation (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the results!
# load the all file names
full_files <- list.files(directory, full.names = TRUE)
# set an initial vector
data_ini <- vector(mode = "numeric", length = 0)
# calculate the correlation of sulfate and nitrate
for (i in 1:length(full_files)) {
monitor_num <- read.csv(full_files[i])
# calculate sulfate and nitrate for monitor locations where the number
# of completely observed cases, regardless of NA
# $ is used to select the key, either sulfate or nitrate
summa <- sum((!is.na(monitor_num$sulfate)) & (!is.na(monitor_num$nitrate)))
if (summa > threshold) {
monitor_temp <- monitor_num[which(!is.na(monitor_num$sulfate)), ]
main_part <- monitor_temp[which(!is.na(monitor_temp$nitrate)), ]
data_ini <- c(data_ini, cor(main_part$sulfate, main_part$nitrate))
}
}
data_ini
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observation (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the results!
# load the all file names
full_files <- list.files(directory, full.names = TRUE)
# set an initial vector
data_ini <- c()
# calculate the correlation of sulfate and nitrate
for (i in 1:length(full_files)) {
monitor_num <- read.csv(full_files[i])
# calculate sulfate and nitrate for monitor locations where the number
# of completely observed cases, regardless of NA
# $ is used to select the key, either sulfate or nitrate
summa <- sum((!is.na(monitor_num$sulfate)) & (!is.na(monitor_num$nitrate)))
if (summa > threshold) {
monitor_temp <- monitor_num[which(!is.na(monitor_num$sulfate)), ]
main_part <- monitor_temp[which(!is.na(monitor_temp$nitrate)), ]
data_ini <- c(data_ini, cor(main_part$sulfate, main_part$nitrate))
}
}
data_ini
}
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 400)
head(cr)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate"
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
# load the all file names
full_files <- list.files(directory, full.names = TRUE)
# set an initial data frame
data_ini <- data.frame()
# set the specific files we want
for (i in id) {
data_ini <- rbind(data_ini, read.csv(full_files[i]))
}
# calculate the mean value
mean(data_ini[[pollutant]], na.rm = TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
# load the all file names
full_files <- list.files(directory, full.names = TRUE)
# set an initial data frame
data_ini <- data.frame()
# calculate the complete cases
for (i in id) {
monitor_num <- read.csv(full_files[i])
nobs_num <- sum(complete.cases(monitor_num))
data_temp <- data.frame(i, nobs_num)
data_ini <- rbind(data_ini, data_temp)
}
# set the header for the data
colnames(data_ini) <- c("id", "nobs")
data_ini
}
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54
?
)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observation (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the results!
# load the all file names
full_files <- list.files(directory, full.names = TRUE)
# set an initial vector
data_ini <- c()
# calculate the correlation of sulfate and nitrate
for (i in 1:length(full_files)) {
monitor_num <- read.csv(full_files[i])
# calculate sulfate and nitrate for monitor locations where the number
# of completely observed cases, regardless of NA
# $ is used to select the key, either sulfate or nitrate
summa <- sum((!is.na(monitor_num$sulfate)) & (!is.na(monitor_num$nitrate)))
if (summa > threshold) {
monitor_temp <- monitor_num[which(!is.na(monitor_num$sulfate)), ]
# the temporary monitor should be fixed with same dimension
main_part <- monitor_temp[which(!is.na(monitor_temp$nitrate)), ]
data_ini <- c(data_ini, cor(main_part$sulfate, main_part$nitrate))
}
}
data_ini
}
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
